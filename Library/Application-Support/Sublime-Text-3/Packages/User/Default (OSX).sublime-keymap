[
	{ "keys": ["f5"], "command": "sort_lines", "args": {"case_sensitive": false} },
	{ "keys": ["ctrl+f5"], "command": "sort_lines", "args": {"case_sensitive": true} },
	{ "keys": ["super+t"], "command": "unbound" },
	{ "keys": ["super+v"], "command": "paste_and_indent" },
	{ "keys": ["super+shift+v"], "command": "paste" },
	{ "keys": ["super+k", "super+t"], "command": "title_case" },
	// Auto-pair backticks
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
			{ "key": "preceding_text", "operator": "not_regex_contains", "operand": "[`a-zA-Z0-9_]$", "match_all": true },
			{ "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
		]
	},
	{ "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
		]
	},
	{ "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
		[
			{ "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
			{ "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
			{ "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
			{ "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
		]
	},
	// Layouts
	{
		"keys": ["super+1"],
		"command": "set_layout",
		"args":
		{
			"cols": [0.0, 1.0],
			"rows": [0.0, 1.0],
			"cells": [[0, 0, 1, 1]]
		}
	},
	{
		"keys": ["super+2"],
		"command": "set_layout",
		"args":
		{
			"cols": [0.0, 0.5, 1.0],
			"rows": [0.0, 1.0],
			"cells": [[0, 0, 1, 1], [1, 0, 2, 1]]
		}
	},
	{
		"keys": ["super+alt+2"],
		"command": "set_layout",
		"args":
		{
			"cols": [0.0, 1.0],
			"rows": [0.0, 0.5, 1.0],
			"cells": [[0, 0, 1, 1], [0, 1, 1, 2]]
		}
	},
	{ "keys": ["super+alt+1"], "command": "unbound" },
	{ "keys": ["super+alt+3"], "command": "unbound" },
	{ "keys": ["super+alt+4"], "command": "unbound" },
	{ "keys": ["super+alt+shift+1"], "command": "unbound" },
	{ "keys": ["super+alt+shift+2"], "command": "unbound" },
	{ "keys": ["super+alt+shift+3"], "command": "unbound" },
	{ "keys": ["super+alt+5"], "command": "unbound" },
	{ "keys": ["super+3"], "command": "unbound" },
	{ "keys": ["super+4"], "command": "unbound" },
	{ "keys": ["super+5"], "command": "unbound" },
	{ "keys": ["super+6"], "command": "unbound" },
	{ "keys": ["super+7"], "command": "unbound" },
	{ "keys": ["super+8"], "command": "unbound" },
	{ "keys": ["super+9"], "command": "unbound" },
	{ "keys": ["super+0"], "command": "unbound" },
]
